trigger:
  tags:
    include:
      - '*'
  branches:
    include:
      - main
      - release/*
      - refs/tags/*

pr:
  branches:
    include:
      - "main"
      - "release/*"

variables:
  - name: poplar_sdk
    # https://docs.graphcore.ai/projects/poptorch-user-guide/en/latest/installation.html#version-compatibility
    value: "poplar_sdk-ubuntu_20_04-3.1.0+1205-58b501c780"

jobs:
  - job: testing
    # how long to run the job before automatically cancelling
    timeoutInMinutes: "20"
    pool: graphcore-ipus
    workspace:
      clean: all

    steps:

    - script: |
        set -eux
        # ls -la /mnt/public/packages
        ls -la /opt/poplar
        tar -xzf /opt/poplar/${{ variables.poplar_sdk }}.tar.gz
        pip debug --verbose
        pip install ${{ variables.poplar_sdk }}/poptorch-*ubuntu*.whl
      displayName: "Poplar SDK: Extract & Install"

    - bash: |
        # enable scripts basically just set/modify some environment variables
        source ${{ variables.poplar_sdk }}/poplar-ubuntu*/enable.sh
        gc-info --list-devices
        printenv
        python --version
        pip --version
        pip list
      displayName: 'Image info & GraphCore'

    - script: |
        set -eux
        source ${{ variables.poplar_sdk }}/poplar-ubuntu*/enable.sh
        NUM_IPUS=$(gc-info --ipu-count)
        if [[ -z "${NUM_IPUS}" ]] || [[ "${NUM_IPUS}" -eq 0 ]]; then
            echo "No IPUs found to reset. Exiting"
            exit 1
        fi
        echo "Resetting parity on ${NUM_IPUS} IPU devices"
        i=0
        while [[ i -lt  "${NUM_IPUS}" ]]; do
            gc-reset -d "${i}"
            i=$((i + 1))
        done
      displayName: "Reset IPU devices"

    - bash: |
        pip install .[test] -f /mnt/public/packages
        pip uninstall -y neptune-client  # it is not clear what version is compatible
        pip list
      env:
        PACKAGE_NAME: "pytorch"
        FREEZE_REQUIREMENTS: "1"
        GIT_TERMINAL_PROMPT: "1"
      displayName: 'Install package & dependencies'

    - bash: |
        python requirements/collect_env_details.py
        python -c "import torch"
      displayName: 'Env details'

    - script: |
        set -eux
        source ${{ variables.poplar_sdk }}/poplar-ubuntu*/enable.sh
        source ${{ variables.poplar_sdk }}/popart-ubuntu*/enable.sh
        python -c "import poptorch; print(poptorch.__version__)"
      displayName: "Check poptorch installation"

    - bash: |
        source ${{ variables.poplar_sdk }}/poplar-ubuntu*/enable.sh
        source ${{ variables.poplar_sdk }}/popart-ubuntu*/enable.sh
        python -m coverage run --source pytorch_lightning -m pytest tests/tests_pytorch -vv --durations=50
      env:
        MKL_THREADING_LAYER: "GNU"
        POPTORCH_WAIT_FOR_IPU: "1"
        PL_RUN_IPU_TESTS: "1"
      displayName: 'Testing: PyTorch standard'
